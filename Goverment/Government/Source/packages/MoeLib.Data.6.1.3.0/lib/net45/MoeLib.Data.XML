<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MoeLib.Data</name>
    </assembly>
    <members>
        <member name="T:Moe.Lib.Data.DbContextBase">
            <summary>
                A <see cref="T:Moe.Lib.Data.DbContextBase" /> adds Auto-Retry function for DbContext of EntityFramework.
            </summary>
            <remarks>
                建议使用MoeDbContext作为业务中使用的DbContext的基类，MoeDbContext为DbContext的常用操作添加了自动重试机制。
            </remarks>
        </member>
        <member name="M:Moe.Lib.Data.DbContextBase.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Moe.Lib.Data.DbContextBase" /> class.
            </summary>
            <param name="nameOrConnectionString">The name of the connection string setting or connection string.</param>
        </member>
        <member name="M:Moe.Lib.Data.DbContextBase.#ctor(System.String,Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryPolicy)">
            <summary>
                Initializes a new instance of the <see cref="T:Moe.Lib.Data.DbContextBase" /> class.
            </summary>
            <param name="nameOrConnectionString">The name of the connection string setting or connection string.</param>
            <param name="retryPolicy">The retry policy used by the <see cref="T:Moe.Lib.Data.DbContextBase" /> instance.</param>
        </member>
        <member name="M:Moe.Lib.Data.DbContextBase.Add``1(``0)">
            <summary>
                Adds the specified entity to this context.
            </summary>
            <typeparam name="T">The type of the adding entity.</typeparam>
            <param name="entity">The adding entity.</param>
        </member>
        <member name="M:Moe.Lib.Data.DbContextBase.Add``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
                Adds the specified entities to this context.
            </summary>
            <typeparam name="T">The type of the adding entities.</typeparam>
            <param name="entities">The adding entities.</param>
        </member>
        <member name="M:Moe.Lib.Data.DbContextBase.Delete``1(``0)">
            <summary>
                Deletes the specified entity form this context and saves all changes made in this context to the underlying database.
            </summary>
            <typeparam name="T">The type of the deleting entity.</typeparam>
            <param name="entity">The deleting entity.</param>
            <returns>
                The number of entries deleted from the underlying database.
            </returns>
            <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateException">
                An error occurred sending updates to the database.
            </exception>
            <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateConcurrencyException">
                A database command did not affect the expected number of rows. This usually indicates an optimistic
                concurrency violation; that is, a row has been changed in the database since it was queried.
            </exception>
            <exception cref="T:System.Data.Entity.Validation.DbEntityValidationException">
                The save was aborted because validation of entity property values failed.
            </exception>
            <exception cref="T:System.NotSupportedException">
                An attempt was made to use unsupported behavior such as executing multiple asynchronous commands concurrently
                on the same context instance.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The context or connection have been disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                Some error occurred attempting to process entities in the context either before or after sending commands
                to the database.
            </exception>
        </member>
        <member name="M:Moe.Lib.Data.DbContextBase.DeleteAsync``1(``0)">
            <summary>
                Asynchronously deletes the specified entity form this context and saves all changes made in this context to the underlying database.
            </summary>
            <typeparam name="T">The type of the deleting entity.</typeparam>
            <param name="entity">The deleting entity.</param>
            <returns>
                A task that represents the asynchronous delete operation.
                The task result contains the number of entries deleted from the underlying database.
            </returns>
            <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateException">
                An error occurred sending updates to the database.
            </exception>
            <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateConcurrencyException">
                A database command did not affect the expected number of rows. This usually indicates an optimistic
                concurrency violation; that is, a row has been changed in the database since it was queried.
            </exception>
            <exception cref="T:System.Data.Entity.Validation.DbEntityValidationException">
                The save was aborted because validation of entity property values failed.
            </exception>
            <exception cref="T:System.NotSupportedException">
                An attempt was made to use unsupported behavior such as executing multiple asynchronous commands concurrently
                on the same context instance.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The context or connection have been disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                Some error occurred attempting to process entities in the context either before or after sending commands
                to the database.
            </exception>
        </member>
        <member name="M:Moe.Lib.Data.DbContextBase.ExecuteSaveChanges">
            <summary>
                Saves all changes made in this context to the underlying database.
            </summary>
            <returns>
                The number of state entries written to the underlying database. This can include
                state entries for entities and/or relationships. Relationship state entries are created for
                many-to-many relationships and relationships where there is no foreign key property
                included in the entity class (often referred to as independent associations).
            </returns>
            <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateException">
                An error occurred sending updates to the database.
            </exception>
            <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateConcurrencyException">
                A database command did not affect the expected number of rows. This usually indicates an optimistic
                concurrency violation; that is, a row has been changed in the database since it was queried.
            </exception>
            <exception cref="T:System.Data.Entity.Validation.DbEntityValidationException">
                The save was aborted because validation of entity property values failed.
            </exception>
            <exception cref="T:System.NotSupportedException">
                An attempt was made to use unsupported behavior such as executing multiple asynchronous commands concurrently
                on the same context instance.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The context or connection have been disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                Some error occurred attempting to process entities in the context either before or after sending commands
                to the database.
            </exception>
        </member>
        <member name="M:Moe.Lib.Data.DbContextBase.ExecuteSaveChangesAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously saves all changes made in this context to the underlying database.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous save operation.
                The task result contains the number of state entries written to the underlying database. This can include
                state entries for entities and/or relationships. Relationship state entries are created for
                many-to-many relationships and relationships where there is no foreign key property
                included in the entity class (often referred to as independent associations).
            </returns>
            <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateException">
                An error occurred sending updates to the database.
            </exception>
            <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateConcurrencyException">
                A database command did not affect the expected number of rows. This usually indicates an optimistic
                concurrency violation; that is, a row has been changed in the database since it was queried.
            </exception>
            <exception cref="T:System.Data.Entity.Validation.DbEntityValidationException">
                The save was aborted because validation of entity property values failed.
            </exception>
            <exception cref="T:System.NotSupportedException">
                An attempt was made to use unsupported behavior such as executing multiple asynchronous commands concurrently
                on the same context instance.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The context or connection have been disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                Some error occurred attempting to process entities in the context either before or after sending commands
                to the database.
            </exception>
        </member>
        <member name="M:Moe.Lib.Data.DbContextBase.ExecuteSaveChangesAsync">
            <summary>
                Asynchronously saves all changes made in this context to the underlying database.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <returns>
                A task that represents the asynchronous save operation.
                The task result contains the number of state entries written to the underlying database. This can include
                state entries for entities and/or relationships. Relationship state entries are created for
                many-to-many relationships and relationships where there is no foreign key property
                included in the entity class (often referred to as independent associations).
            </returns>
            <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateException">
                An error occurred sending updates to the database.
            </exception>
            <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateConcurrencyException">
                A database command did not affect the expected number of rows. This usually indicates an optimistic
                concurrency violation; that is, a row has been changed in the database since it was queried.
            </exception>
            <exception cref="T:System.Data.Entity.Validation.DbEntityValidationException">
                The save was aborted because validation of entity property values failed.
            </exception>
            <exception cref="T:System.NotSupportedException">
                An attempt was made to use unsupported behavior such as executing multiple asynchronous commands concurrently
                on the same context instance.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The context or connection have been disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                Some error occurred attempting to process entities in the context either before or after sending commands
                to the database.
            </exception>
        </member>
        <member name="M:Moe.Lib.Data.DbContextBase.Query``1">
            <summary>
                Returns a <see cref="T:System.Data.Entity.DbSet`1" /> instance for access to entities of the given type in the context and the underlying store.
            </summary>
            <remarks>
                Note that Entity Framework requires that this method return the same instance each time that it is called
                for a given context instance and entity type. Also, the non-generic <see cref="T:System.Data.Entity.DbSet" /> returned by the
                <see cref="M:System.Data.Entity.DbContext.Set(System.Type)" /> method must wrap the same underlying query and set of entities. These invariants must
                be maintained if this method is overridden for anything other than creating test doubles for unit testing.
                See the <see cref="T:System.Data.Entity.DbSet`1" /> class for more details.
            </remarks>
            <typeparam name="T">The type entity for which a set should be returned. </typeparam>
            <returns>
                A set for the given entity type.
            </returns>
        </member>
        <member name="M:Moe.Lib.Data.DbContextBase.ReadonlyQuery``1">
            <summary>
                Returns a new query where the entities returned will not be cached in the <see cref="T:System.Data.Entity.DbContext" />.
            </summary>
            <typeparam name="T">The type entity for which a query should be returned. </typeparam>
            <returns>
                A new query with NoTracking applied.
            </returns>
        </member>
        <member name="M:Moe.Lib.Data.DbContextBase.Remove``1(``0)">
            <summary>
                Removes the specified entity from this context.
            </summary>
            <typeparam name="T">The type of the removing entity.</typeparam>
            <param name="entity">The removing entity.</param>
        </member>
        <member name="M:Moe.Lib.Data.DbContextBase.Save``1(``0)">
            <summary>
                Saves the specified entity to this context and saves all changes made in this context to the underlying database.
            </summary>
            <typeparam name="T">The type of the saving entity.</typeparam>
            <param name="entity">The saving entity.</param>
            <returns>
                The number of entries saved to the underlying database.
            </returns>
            <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateException">
                An error occurred sending updates to the database.
            </exception>
            <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateConcurrencyException">
                A database command did not affect the expected number of rows. This usually indicates an optimistic
                concurrency violation; that is, a row has been changed in the database since it was queried.
            </exception>
            <exception cref="T:System.Data.Entity.Validation.DbEntityValidationException">
                The save was aborted because validation of entity property values failed.
            </exception>
            <exception cref="T:System.NotSupportedException">
                An attempt was made to use unsupported behavior such as executing multiple asynchronous commands concurrently
                on the same context instance.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The context or connection have been disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                Some error occurred attempting to process entities in the context either before or after sending commands
                to the database.
            </exception>
        </member>
        <member name="M:Moe.Lib.Data.DbContextBase.SaveAsync``1(``0)">
            <summary>
                Asynchronously saves the specified entity to this context and saves all changes made in this context to the underlying database.
            </summary>
            <typeparam name="T">The type of the saving entity.</typeparam>
            <param name="entity">The saving entity.</param>
            <returns>
                A task that represents the asynchronous delete operation.
                The task result contains the number of entries deleted from the underlying database.
            </returns>
            <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateException">
                An error occurred sending updates to the database.
            </exception>
            <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateConcurrencyException">
                A database command did not affect the expected number of rows. This usually indicates an optimistic
                concurrency violation; that is, a row has been changed in the database since it was queried.
            </exception>
            <exception cref="T:System.Data.Entity.Validation.DbEntityValidationException">
                The save was aborted because validation of entity property values failed.
            </exception>
            <exception cref="T:System.NotSupportedException">
                An attempt was made to use unsupported behavior such as executing multiple asynchronous commands concurrently
                on the same context instance.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The context or connection have been disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                Some error occurred attempting to process entities in the context either before or after sending commands
                to the database.
            </exception>
        </member>
        <member name="M:Moe.Lib.Data.DbContextBase.SaveOrUpdate``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
                Saves the specified entity to this context or updates the entity in this context, and saves all changes made in this context to the underlying database.
            </summary>
            <typeparam name="T">The type of the entity.</typeparam>
            <param name="entity">The entity to save or update.</param>
            <param name="identifierExpression">The identifier expression for determining whether the entity is exsting in the underlying database.</param>
            <returns>
                The number of entries saved or updated to the underlying database.
            </returns>
            <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateException">
                An error occurred sending updates to the database.
            </exception>
            <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateConcurrencyException">
                A database command did not affect the expected number of rows. This usually indicates an optimistic
                concurrency violation; that is, a row has been changed in the database since it was queried.
            </exception>
            <exception cref="T:System.Data.Entity.Validation.DbEntityValidationException">
                The save was aborted because validation of entity property values failed.
            </exception>
            <exception cref="T:System.NotSupportedException">
                An attempt was made to use unsupported behavior such as executing multiple asynchronous commands concurrently
                on the same context instance.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The context or connection have been disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                Some error occurred attempting to process entities in the context either before or after sending commands
                to the database.
            </exception>
        </member>
        <member name="M:Moe.Lib.Data.DbContextBase.SaveOrUpdateAsync``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
                Asynchronously saves the specified entity to this context or updates the entity in this context, and saves all changes made in this context to the underlying database.
            </summary>
            <typeparam name="T">The type of the entity.</typeparam>
            <param name="entity">The entity to save or update.</param>
            <param name="identifierExpression">The identifier expression for determining whether the entity is exsting in the underlying database.</param>
            <returns>
                A task that represents the asynchronous save or update operation.
                The task result contains the number of entries saved or updated from the underlying database.
            </returns>
            <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateException">
                An error occurred sending updates to the database.
            </exception>
            <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateConcurrencyException">
                A database command did not affect the expected number of rows. This usually indicates an optimistic
                concurrency violation; that is, a row has been changed in the database since it was queried.
            </exception>
            <exception cref="T:System.Data.Entity.Validation.DbEntityValidationException">
                The save was aborted because validation of entity property values failed.
            </exception>
            <exception cref="T:System.NotSupportedException">
                An attempt was made to use unsupported behavior such as executing multiple asynchronous commands concurrently
                on the same context instance.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The context or connection have been disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                Some error occurred attempting to process entities in the context either before or after sending commands
                to the database.
            </exception>
        </member>
    </members>
</doc>
